shell = "zsh"

[templates]
defer = "{{ hooks?.pre | nl }}{% for file in files %}zsh-defer source \"{{ file }}\"\n{% endfor %}{{ hooks?.post | nl }}"

[plugins.zsh-defer]
github = "romkatv/zsh-defer"

[plugins.compinit]
inline = "autoload -Uz compinit && zsh-defer compinit -d \"${ZCACHEDIR}/zcompdump-${ZSH_VERSION}\""

[plugins.git-prompt]
github = "woefe/git-prompt.zsh"
hooks.post = "source \"${ZDOTDIR}/hooks/git-prompt_post.zsh\"" # Set prompt after loading git-prompt.

[plugins.local-sync]
inline = """
target_dir="${ZDOTDIR}/sync"
if [[ -d "${target_dir}" ]]; then
   while IFS= read -r file; do
      source "${file}"
   done < <(find "${target_dir}" -type f -name "*.zsh" | sort)
fi
"""

[plugins.local-defer]
inline = """
target_dir="${ZDOTDIR}/defer"
if [[ -d "${target_dir}" ]]; then
   while IFS= read -r file; do
      zsh-defer source "${file}"
   done < <(find "${target_dir}" -type f -name "*.zsh" | sort)
fi
"""

[plugins.zsh-autosuggestions]
github = "zsh-users/zsh-autosuggestions"
apply = ["defer"]

[plugins.fast-syntax-highlighting]
github = "zdharma-continuum/fast-syntax-highlighting"
apply = ["defer"]
